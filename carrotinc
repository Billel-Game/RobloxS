local omni = loadstring(game:HttpGet("https://raw.githubusercontent.com/Billel-Game/RobloxS/refs/heads/main/libtest.lua"))()
omni:ShowKeyPrompt(
    "https://raw.githubusercontent.com/Billel-Game/RobloxS/main/broken",
    "https://link-target.net/1380127/e5ro3DcEbUkf"
)
--// UI Setup
local UI = omni.new({
    Name = "üî• Fury Scripts üî•",
    Credit = "Created by Billel",
    Color = Color3.fromRGB(122, 28, 187),
    Discord = "Billel"
})

local toggleButton = omni:CreateToggleButton(UI, 133641333781908)

local mainPage = UI:CreatePage("Main üè†")
local mainSection = mainPage:CreateSection("Main (Toggles)")

local carrotRemote = game:GetService("ReplicatedStorage")
    :WaitForChild("Events")
    :WaitForChild("Remotes")
    :WaitForChild("CollectCarrot")

local carrotArgs = {
    {
        Currency = "Carrots",
        Rarity = 0.1,
        ID = "DarkMatter_Carrot",
        Value = 1500,
        Name = "Dark matter carrot"
    }
}

local autoCarrotEnabled = false

mainSection:CreateToggle({
    Name = "ü•ï Auto Collect Diamond Carrot",
    Flag = "AutoCarrot",
    Default = false,
    Callback = function(state)
        autoCarrotEnabled = state
        if state then
            task.spawn(function()
                while autoCarrotEnabled do
                    pcall(function()
                        carrotRemote:FireServer(unpack(carrotArgs))
                    end)
                    task.wait(0.1)
                end
            end)
        end
    end
})

local rebirthRemote = game:GetService("ReplicatedStorage")
    :WaitForChild("Events")
    :WaitForChild("Remotes")
    :WaitForChild("RebirthClicked")

local autoRebirthEnabled = false

mainSection:CreateToggle({
    Name = "üîÑ Auto Rebirth",
    Flag = "AutoRebirth",
    Default = false,
    Callback = function(state)
        autoRebirthEnabled = state
        if state then
            task.spawn(function()
                while autoRebirthEnabled do
                    pcall(function()
                        rebirthRemote:InvokeServer()
                    end)
                    task.wait(10)
                end
            end)
        end
    end
})

-- ...existing code...

local buyMaxRemote = game:GetService("ReplicatedStorage")
    :WaitForChild("Events")
    :WaitForChild("Remotes")
    :WaitForChild("BuyMaxClicked")

local carrotValueArgs = {
    workspace:WaitForChild("Boards"):WaitForChild("UpgradeBoards"):WaitForChild("CarrotUpgrades"):WaitForChild("BoardPart"):WaitForChild("Ui"):WaitForChild("Frame"):WaitForChild("CarrotValue"),
    {
        Description = "",
        OrginalCost = 5,
        CostMultiplier = 1.5,
        Name = "CarrotValue",
        IncreaseAmountType = "Addition",
        IncreasingStat = "CarrotValue",
        CostCurrency = "Carrots",
        IncreasingAmount = 2,
        MaxLvl = 80
    }
}

local maxCarrotAmountArgs = {
    workspace:WaitForChild("Boards"):WaitForChild("UpgradeBoards"):WaitForChild("CarrotUpgrades"):WaitForChild("BoardPart"):WaitForChild("Ui"):WaitForChild("Frame"):WaitForChild("MaxCarrotAmount"),
    {
        Description = "",
        OrginalCost = 2,
        CostMultiplier = 1.5,
        Name = "MaxCarrotAmount",
        IncreaseAmountType = "Addition",
        IncreasingStat = "MaxCarrotAmount",
        CostCurrency = "Carrots",
        IncreasingAmount = 1,
        MaxLvl = 50
    }
}

local growthRateArgs = {
    workspace:WaitForChild("Boards"):WaitForChild("UpgradeBoards"):WaitForChild("CarrotUpgrades"):WaitForChild("BoardPart"):WaitForChild("Ui"):WaitForChild("Frame"):WaitForChild("GrowthRate"),
    {
        Description = "",
        OrginalCost = 5,
        CostMultiplier = 4,
        Name = "GrowthRate",
        IncreaseAmountType = "Addition",
        IncreasingStat = "GrowthRate",
        CostCurrency = "Carrots",
        IncreasingAmount = -0.2,
        MaxLvl = 9
    }
}

local autoBuyUpgradesEnabled = false

mainSection:CreateToggle({
    Name = "‚¨ÜÔ∏è Auto Buy All Carrot Upgrades",
    Flag = "AutoBuyAllCarrotUpgrades",
    Default = false,
    Callback = function(state)
        autoBuyUpgradesEnabled = state
        if state then
            task.spawn(function()
                while autoBuyUpgradesEnabled do
                    pcall(function()
                        buyMaxRemote:InvokeServer(unpack(carrotValueArgs))
                        buyMaxRemote:InvokeServer(unpack(maxCarrotAmountArgs))
                        buyMaxRemote:InvokeServer(unpack(growthRateArgs))
                    end)
                    task.wait(1)
                end
            end)
        end
    end
})

-- ...existing code...